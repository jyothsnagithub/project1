{
	"name": "DFTask1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText47",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText48",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable10",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable11",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "window1"
				},
				{
					"name": "select3"
				},
				{
					"name": "window2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "surrogateKey2"
				},
				{
					"name": "select4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Year as integer,",
				"          Month as integer,",
				"          Make as string,",
				"          Quantity as string,",
				"          Pct as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Year as string,",
				"          Month as string,",
				"          Make as string,",
				"          Quantity as string,",
				"          Pct as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1 select(mapColumn(",
				"          Year,",
				"          Month",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 select(mapColumn(",
				"          Make",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"filter2 keyGenerate(output(DateKey as long),",
				"     startAt: 1001L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"select1 window(over(Year,",
				"          Month),",
				"     asc(Year, true),",
				"     rnk = rowNumber()) ~> window1",
				"surrogateKey1 select(mapColumn(",
				"          DateKey,",
				"          Year,",
				"          Month",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select2 window(over(Make),",
				"     asc(Make, true),",
				"     rnk1 = rowNumber()) ~> window2",
				"window2 filter(rnk1==1) ~> filter1",
				"window1 filter(rnk==1) ~> filter2",
				"filter1 keyGenerate(output(Brand_ID as long),",
				"     startAt: 101L,",
				"     stepValue: 1L) ~> surrogateKey2",
				"surrogateKey2 select(mapColumn(",
				"          Bran_ID = Brand_ID,",
				"          Make",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateKey as integer,",
				"          Year as integer,",
				"          Month as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['truncate table SalesBrand'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          DateKey,",
				"          Year,",
				"          Month",
				"     )) ~> sink1",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Bran_ID as integer,",
				"          Make as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['truncate table salesDate'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Bran_ID,",
				"          Make",
				"     )) ~> sink2"
			]
		}
	}
}